Web API
=======

The web interface interacts with the MongoDB server via the Web API, in order to
get data more easily.

Webservices
-----------

+-------------------+-------------------------------------------------+
| account           | Used to interact with user accounts             |
+-------------------+-------------------------------------------------+
| auth              | Used for authentication                         |
+-------------------+-------------------------------------------------+
| calendar_events   | Used to retrieve ICS events                     |
+-------------------+-------------------------------------------------+
| entities          | Used to retrieve Canopsis entities              |
+-------------------+-------------------------------------------------+
| event             | Used to send event from the web interface       |
+-------------------+-------------------------------------------------+
| files             | Used to interact with the GridFS store          |
+-------------------+-------------------------------------------------+
| perfstore         | Used to interact with perfdatas                 |
+-------------------+-------------------------------------------------+
| reporting         | Used to generate reports and send them via mail |
+-------------------+-------------------------------------------------+
| rest              | Used to interact with MongoDB collections       |
+-------------------+-------------------------------------------------+
| rights            | Used to set access rights on a single record    |
+-------------------+-------------------------------------------------+
| ui_view           | Used to handle views                            |
+-------------------+-------------------------------------------------+
| ui_widgets        | Used to retrieve widgets                        |
+-------------------+-------------------------------------------------+
| ui_topology       | Used to retrieve topology operators             |
+-------------------+-------------------------------------------------+
| ui_locales        | Used to set environment locales                 |
+-------------------+-------------------------------------------------+

Response format
---------------

The ``Content-Type`` of response is generally ``application/json``, in the other
case, the response format will be specified.

For all JSON response, the format is the following :

.. code-block:: javascript

     {
          total:    // number of event matched
          data:     // list of all records retrieved according to attributes limit, start and sort
          success:  // True if the query was a success, False otherwise
     }

Account webservice
------------------

+-------------+-----------------------------------------------------+--------------------------------------------------------------------------------------------+
| **Request** | **URL**                                             | **Description**                                                                            |
+-------------+-----------------------------------------------------+--------------------------------------------------------------------------------------------+
| GET         | ``/account/me``                                     | Get current account                                                                        |
+-------------+-----------------------------------------------------+--------------------------------------------------------------------------------------------+
| GET         | ``/account/getAvatar/:_id``                         | Get avatar of specific account                                                             |
+-------------+-----------------------------------------------------+--------------------------------------------------------------------------------------------+
| GET         | ``/account/getAvatar``                              | Get avatar of current account                                                              |
+-------------+-----------------------------------------------------+--------------------------------------------------------------------------------------------+
| POST        | ``/account/setConfig/:_id``                         | Set setting ``_id`` to ``value`` (passed via POST)                                         |
+-------------+-----------------------------------------------------+--------------------------------------------------------------------------------------------+
| GET         | ``/account/getAuthKey/:dest_account``               | Get **authkey** for ``dest_account``                                                       |
+-------------+-----------------------------------------------------+--------------------------------------------------------------------------------------------+
| GET         | ``/account/getNewAuthKey/:dest_account``            | Generate a new **authkey** for ``dest_account``                                            |
+-------------+-----------------------------------------------------+--------------------------------------------------------------------------------------------+
| GET         | ``/account/:_id``                                   | Get specific account                                                                       |
+-------------+-----------------------------------------------------+--------------------------------------------------------------------------------------------+
| GET         | ``/account/``                                       | Get all accounts                                                                           |
+-------------+-----------------------------------------------------+--------------------------------------------------------------------------------------------+
| POST        | ``/account/``                                       | Create a new account                                                                       |
+-------------+-----------------------------------------------------+--------------------------------------------------------------------------------------------+
| PUT         | ``/account/:_id``                                   | Update specific account (*NB:* ``_id`` *must be passed via request's body if not in URL*)  |
+-------------+-----------------------------------------------------+--------------------------------------------------------------------------------------------+
| DELETE      | ``/account/:_id``                                   | Delete specific account (*NB:* ``_id`` *must be passed via request's body if not in URL*)  |
+-------------+-----------------------------------------------------+--------------------------------------------------------------------------------------------+
| POST        | ``/account/addToGroup/:group_id/:account_id``       | Add user ``account_id`` to group ``group_id``                                              |
+-------------+-----------------------------------------------------+--------------------------------------------------------------------------------------------+
| POST        | ``/account/removeFromGroup/:group_id/:account_id``  | Remove user ``account_id`` from group ``group_id``                                         |
+-------------+-----------------------------------------------------+--------------------------------------------------------------------------------------------+

.. include:: ../_static/rest/account/setConfig.rst
.. include:: ../_static/rest/account/index.rst

Auth webservice
---------------

+-------------+---------------------------------+----------------------------------------+
| **Request** | **URL**                         | **Description**                        |
+-------------+---------------------------------+----------------------------------------+
|             | ``/account/checkAuthPlugin1``   |                                        |
| GET         +---------------------------------+ Test checkAuthPlugin                   |
|             | ``/account/checkAuthPlugin2``   |                                        |
+-------------+---------------------------------+----------------------------------------+
| GET         | ``/auth``                       | Authenticate user                      |
+-------------+---------------------------------+----------------------------------------+
| GET         | ``/autoLogin/:key``             | Authenticate user with authkey ``key`` |
+-------------+---------------------------------+----------------------------------------+
|             | ``/logout``                     |                                        |
| GET         +---------------------------------+ Log user out                           |
|             | ``/disconnect``                 |                                        |
+-------------+---------------------------------+----------------------------------------+

.. include:: ../_static/rest/auth/login.rst

Calendar Events webservice
--------------------------

+-------------+------------------------------------------------+-------------------------------------------------------------------------------------------+
| **Request** | **URL**                                        | **Description**                                                                           |
+-------------+------------------------------------------------+-------------------------------------------------------------------------------------------+
| GET         | ``/cal/:source/:interval_start/:interval_end`` | Get all ICS events for ``source`` in time interval [``interval_start``, ``interval_end``] |
+-------------+------------------------------------------------+-------------------------------------------------------------------------------------------+

.. include:: ../_static/rest/calendar/events.rst

Entities webservice
-------------------

+-------------+-----------------------------+----------------------------------------------------------------------------------------------------+
| **Request** | **URL**                     | **Description**                                                                                    |
+-------------+-----------------------------+----------------------------------------------------------------------------------------------------+
| GET         | ``/entities/``              | Get all entities                                                                                   |
+-------------+-----------------------------+----------------------------------------------------------------------------------------------------+
| POST        | ``/entities/``              | Get entities according to the Mongo filter passed in ``filter`` parameter passed in request's body |
+-------------+-----------------------------+----------------------------------------------------------------------------------------------------+
| GET         | ``/entities/:etype``        | Get all entities of type ``etype``                                                                 |
+-------------+-----------------------------+----------------------------------------------------------------------------------------------------+
| GET         | ``/entities/:etype/:ename`` | Get all entities of type ``etype`` and name ``ename``, **it should return only one document**      |
+-------------+-----------------------------+----------------------------------------------------------------------------------------------------+

.. include:: ../_static/rest/entities/index.rst

Event webservice
----------------

+-------------+--------------------------+----------------------------------------------------------------------------------------------------+
| **Request** | **URL**                  | **Description**                                                                                    |
+-------------+--------------------------+----------------------------------------------------------------------------------------------------+
| POST        | ``/event/``              | Get all entities                                                                                   |
+-------------+--------------------------+----------------------------------------------------------------------------------------------------+
| POST        | ``/event/:routing_key``  | Get entities according to the Mongo filter passed in ``filter`` parameter passed in request's body |
+-------------+--------------------------+----------------------------------------------------------------------------------------------------+

.. include:: ../_static/rest/event/send.rst

Files webservice
----------------

+-------------+--------------------+----------------------------------------------------------------------------------------------------------------------------------+
| **Request** | **URL**            | **Description**                                                                                                                  |
+-------------+--------------------+----------------------------------------------------------------------------------------------------------------------------------+
| GET         | ``/files``         | Get all files                                                                                                                    |
+-------------+--------------------+----------------------------------------------------------------------------------------------------------------------------------+
| GET         | ``/files/:metaId`` | Get file identified by ``metaId``                                                                                                |
+-------------+--------------------+----------------------------------------------------------------------------------------------------------------------------------+
| POST        | ``/files``         | URL for file-uploading                                                                                                           |
+-------------+--------------------+----------------------------------------------------------------------------------------------------------------------------------+
| PUT         | ``/files/:metaId`` | Update specific file identified by ``metaId`` (must be present in request's body attribute ``id`` if ``metaId`` isn't specified) |
+-------------+--------------------+----------------------------------------------------------------------------------------------------------------------------------+
| DELETE      | ``/files/:metaId`` | Remove specific file identified by ``metaId`` (must be present in request's body attribute ``id`` if ``metaId`` isn't specified) |
+-------------+--------------------+----------------------------------------------------------------------------------------------------------------------------------+

.. include:: ../_static/rest/files/index.rst

PerfStore webservice
--------------------

+-------------+-------------------------------------+----------------------------------------------------------------------------------------------------------------------+
| **Request** | **URL**                             | **Description**                                                                                                      |
+-------------+-------------------------------------+----------------------------------------------------------------------------------------------------------------------+
| GET         | ``/perfstore/get_all_metrics``      | Get all metrics                                                                                                      |
+-------------+-------------------------------------+----------------------------------------------------------------------------------------------------------------------+
| GET         | ``/perfstore/values``               | Get values for nodes                                                                                                 |
+-------------+-------------------------------------+----------------------------------------------------------------------------------------------------------------------+
| GET         | ``/perfstore/values/:start/:stop``  | Get values for nodes in time interval [``start``, ``stop``]                                                          |
+-------------+-------------------------------------+----------------------------------------------------------------------------------------------------------------------+
| DELETE      | ``/perfstore/:_id``                 | Delete metrics identified by ``_id`` (must be present in request's body, as a list of ids, if not specified in URL)  |
+-------------+-------------------------------------+----------------------------------------------------------------------------------------------------------------------+
| PUT         | ``/perfstore``                      | Update metrics                                                                                                       |
+-------------+-------------------------------------+----------------------------------------------------------------------------------------------------------------------+
| POST        | ``/perfstore/perftop``              | Get metrics that match a Mongo filter, and return them sorted by their values                                        |
+-------------+-------------------------------------+----------------------------------------------------------------------------------------------------------------------+
| POST        | ``/perfstore/perftop/:start/:stop`` | Get metrics that match a Mongo filter, and return them sorted by their values in time interval [``start``, ``stop``] |
+-------------+-------------------------------------+----------------------------------------------------------------------------------------------------------------------+

.. include:: ../_static/rest/perfstore/values.rst
.. include:: ../_static/rest/perfstore/metrics.rst
.. include:: ../_static/rest/perfstore/perftop.rst

Reporting webservice
--------------------

+-------------+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
| **Request** | **URL**                                              | **Description**                                                                                                                     |
+-------------+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
| POST        | ``/reporting/:startTime/:stopTime/:view_name/:mail`` | Generate report for ``view_name`` in time interval [``startTime``, ``stopTime``], and send the resulting PDF to ``mail`` if defined |
+-------------+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
| POST        | ``/sendreport``                                      | Send report by mail                                                                                                                 |
+-------------+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
| POST        | ``/export_svg``                                      | Used to download SVG data in request's parameters                                                                                   |
+-------------+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+

.. include:: ../_static/rest/reporting/sendreport.rst
.. include:: ../_static/rest/reporting/exportsvg.rst

REST webservice
---------------

+-------------+-------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
| **Request** | **URL**                             | **Description**                                                                                                                   |
+-------------+-------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
| GET         | ``/rest/media/:namespace/:_id``     | Download media file associated to the record identified by ``_id`` in the Mongo collection ``namespace``                          |
+-------------+-------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
| GET         | ``/rest/events_tress/``             | Get all events hierarchy                                                                                                          |
+-------------+-------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
| GET         | ``/rest/events_tress/:rk``          | Get events hierarchy for ``rk``, here ``rk`` acts as a path and allows you to retrieve sub-trees                                  |
+-------------+-------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
| GET         | ``/rest/:namespace``                | Get all records in Mongo collection ``namespace``                                                                                 |
+-------------+-------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
| GET         | ``/rest/:namespace/:ctype``         | Get all records of type ``type`` in Mongo collection ``namespace``                                                                |
+-------------+-------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
| GET         | ``/rest/:namespace/:ctype/:_id``    | Get record ``_id`` of type ``type`` in Mongo collection ``namespace``                                                             |
+-------------+-------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
| POST        | ``/rest/:namespace/:ctype``         | Create new record of type ``type`` in Mongo collection ``namespace``                                                              |
+-------------+-------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
| POST        | ``/rest/:namespace/:ctype/:_id``    | Update record ``_id`` of type ``type`` in Mongo collection ``namespace``                                                          |
+-------------+-------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
| PUT         | ``/rest/:namespace/:ctype/:_id``    | Update record ``_id`` of type ``type`` in Mongo collection ``namespace`` (``_id`` must be passed in request's body if not in URL) |
+-------------+-------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
| DELETE      | ``/rest/:namespace/:ctype/:_id``    | Delete record ``_id`` of type ``type`` in Mongo collection ``namespace`` (``_id`` must be passed in request's body if not in URL) |
+-------------+-------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+

.. include:: ../_static/rest/index.rst

Rights webservice
-----------------

+-------------+-------------------------------------+---------------------------------------------------------------------------------+
| **Request** | **URL**                             | **Description**                                                                 |
+-------------+-------------------------------------+---------------------------------------------------------------------------------+
| PUT         | ``/rights/:namespace/:crecord_id``  | Change access rights on record ``crecord_id`` in Mongo collection ``namespace`` |
+-------------+-------------------------------------+---------------------------------------------------------------------------------+

.. include:: ../_static/rest/rights/change.rst

UI View webservice
------------------

+-------------+-------------------------------------+-------------------------------------------------------------------------------------------------+
| **Request** | **URL**                             | **Description**                                                                                 |
+-------------+-------------------------------------+-------------------------------------------------------------------------------------------------+
| GET         | ``/ui/view``                        | Get all views                                                                                   |
+-------------+-------------------------------------+-------------------------------------------------------------------------------------------------+
| DELETE      | ``/ui/view/:_id``                   | Remove view ``_id`` (must be passed in request's body as a list of ids if not specified in URL) |
+-------------+-------------------------------------+-------------------------------------------------------------------------------------------------+
| POST        | ``/ui/view``                        | Create views                                                                                    |
+-------------+-------------------------------------+-------------------------------------------------------------------------------------------------+
| PUT         | ``/ui/view``                        | Update views                                                                                    |
+-------------+-------------------------------------+-------------------------------------------------------------------------------------------------+
| GET         | ``/ui/view/exist/:name``            | Check if view ``name`` exists                                                                   |
+-------------+-------------------------------------+-------------------------------------------------------------------------------------------------+
| GET         | ``/ui/view/export/:_id``            | Download view ``_id`` as a JSON file (``_id`` must be passed in request's body if not in URL)   |
+-------------+-------------------------------------+-------------------------------------------------------------------------------------------------+
| GET         | ``/ui/view/export/object/:_id``     | Download record ``_id`` as a JSON file (``_id`` must be passed in request's body if not in URL) |
+-------------+-------------------------------------+-------------------------------------------------------------------------------------------------+
| POST        | ``/ui/view/export/objects``         | Download records as a JSON file                                                                 |
+-------------+-------------------------------------+-------------------------------------------------------------------------------------------------+

.. include:: ../_static/rest/ui_view/index.rst

UI Widgets webservice
---------------------

+-------------+---------------------------+--------------------------------------+
| **Request** | **URL**                   | **Description**                      |
+-------------+---------------------------+--------------------------------------+
| GET         | ``/ui/widgets``           | Get all widgets                      |
+-------------+---------------------------+--------------------------------------+
| GET         | ``/ui/widgets.css``       | Get CSS for all widgets              |
+-------------+---------------------------+--------------------------------------+
| GET         | ``/ui/thirdpartylibs.js`` | Get third party Javascript libraries |
+-------------+---------------------------+--------------------------------------+

UI Topology webservice
----------------------

+-------------+----------------------------+----------------------------+
| **Request** | **URL**                    | **Description**            |
+-------------+----------------------------+----------------------------+
| GET         | ``/topology/getOperators`` | Get all topology operators |
+-------------+----------------------------+----------------------------+

UI Locales webservice
---------------------

+-------------+---------------------------------------+-------------------------------------------+
| **Request** | **URL**                               | **Description**                           |
+-------------+---------------------------------------+-------------------------------------------+
| GET         | ``/:lang/static/canopsis/locales.js`` | Initialize environment to locale ``lang`` |
+-------------+---------------------------------------+-------------------------------------------+
| GET         | ``/static/canopsis/locales.js``       | Initialize environment to locale 'en'     |
+-------------+---------------------------------------+-------------------------------------------+
